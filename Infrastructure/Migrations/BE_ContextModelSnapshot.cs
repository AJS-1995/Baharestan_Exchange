// <auto-generated />
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(BE_Context))]
    partial class BE_ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domin.AgenciesDomin.Agencies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Mobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Responsible")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SaveDate")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tbl_Agencies", (string)null);
                });

            modelBuilder.Entity("Domin.CompanyDomin.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Logo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Responsible")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Tbl_Companies", (string)null);
                });

            modelBuilder.Entity("Domin.DailyRateDomin.DailyRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgenciesId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DateDay")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("MainMoneyId")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceBey")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceSell")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SaveDate")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("SecondaryMoneyId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tbl_DailyRates", (string)null);
                });

            modelBuilder.Entity("Domin.ExchangeRateDomin.ExchangeRate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("AgenciesId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DateDay")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("MainMoneyId")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceBey")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceSell")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SaveDate")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("SecondaryMoneyId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tbl_ExchangeRates", (string)null);
                });

            modelBuilder.Entity("Domin.ExpenseDomin.Collection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgenciesId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SaveDate")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tbl_Collections", (string)null);
                });

            modelBuilder.Entity("Domin.ExpenseDomin.Expense", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("AgenciesId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Collection_Id")
                        .HasColumnType("int");

                    b.Property<string>("Date")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Money_Id")
                        .HasColumnType("int");

                    b.Property<string>("N_Invoice")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Personnel_Id")
                        .HasColumnType("int");

                    b.Property<string>("Ph_Invoice")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("SafeBox_Id")
                        .HasColumnType("int");

                    b.Property<string>("SaveDate")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Collection_Id");

                    b.ToTable("Tbl_Expenses", (string)null);
                });

            modelBuilder.Entity("Domin.MoneyDomin.Money", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgenciesId")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SaveDate")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Symbol")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tbl_Moneys", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AgenciesId = 0,
                            Country = "افغانستان",
                            Deleted = false,
                            Name = "افغانی",
                            SaveDate = "1402/10/22 - 07:29:50",
                            Status = true,
                            Symbol = "؋",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            AgenciesId = 0,
                            Country = "ایالات متحده امریکا",
                            Deleted = false,
                            Name = "دلار",
                            SaveDate = "1402/10/22 - 07:29:50",
                            Status = true,
                            Symbol = "$",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            AgenciesId = 0,
                            Country = "ایران",
                            Deleted = false,
                            Name = "تومان",
                            SaveDate = "1402/10/22 - 07:29:50",
                            Status = true,
                            Symbol = "IRR",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            AgenciesId = 0,
                            Country = "پاکستان",
                            Deleted = false,
                            Name = "روپیه پاکستان",
                            SaveDate = "1402/10/22 - 07:29:50",
                            Status = true,
                            Symbol = "₨",
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            AgenciesId = 0,
                            Country = "هندوستان",
                            Deleted = false,
                            Name = "روپیه هندی",
                            SaveDate = "1402/10/22 - 07:29:50",
                            Status = true,
                            Symbol = "₹",
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            AgenciesId = 0,
                            Country = "اروپا",
                            Deleted = false,
                            Name = "یورو",
                            SaveDate = "1402/10/22 - 07:29:50",
                            Status = true,
                            Symbol = "€",
                            UserId = 1
                        },
                        new
                        {
                            Id = 7,
                            AgenciesId = 0,
                            Country = "بریتانیا",
                            Deleted = false,
                            Name = "پوند",
                            SaveDate = "1402/10/22 - 07:29:50",
                            Status = true,
                            Symbol = "£",
                            UserId = 1
                        },
                        new
                        {
                            Id = 8,
                            AgenciesId = 0,
                            Country = "چین",
                            Deleted = false,
                            Name = "یوآن",
                            SaveDate = "1402/10/22 - 07:29:50",
                            Status = true,
                            Symbol = "¥",
                            UserId = 1
                        },
                        new
                        {
                            Id = 9,
                            AgenciesId = 0,
                            Country = "ترکیه",
                            Deleted = false,
                            Name = "لیره",
                            SaveDate = "1402/10/22 - 07:29:50",
                            Status = true,
                            Symbol = "₺",
                            UserId = 1
                        },
                        new
                        {
                            Id = 10,
                            AgenciesId = 0,
                            Country = "روسیه",
                            Deleted = false,
                            Name = "روبل",
                            SaveDate = "1402/10/22 - 07:29:50",
                            Status = true,
                            Symbol = "₽",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Domin.PersonnelDomin.Personnel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("AgenciesId")
                        .HasColumnType("int");

                    b.Property<string>("Cart_Id")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Fathers_Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Photo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SaveDate")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tbl_Personnel", (string)null);
                });

            modelBuilder.Entity("Domin.PersonsDomin.Persons", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("AgenciesId")
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Guarantor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GuarantorPhoto")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SaveDate")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tbl_Persons", (string)null);
                });

            modelBuilder.Entity("Domin.SafeBoxDomin.SafeBox", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgenciesId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Mobile")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SaveDate")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Treasurer")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tbl_SafeBoxs", (string)null);
                });

            modelBuilder.Entity("Domin.UsersDomin.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgenciesId")
                        .HasColumnType("int");

                    b.Property<int>("Cod")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NamePersian")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SaveDate")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tbl_Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AgenciesId = 0,
                            Cod = 1,
                            Deleted = false,
                            Name = "Admin",
                            NamePersian = "مدیر سیستم",
                            SaveDate = "1402/10/22 - 07:29:50",
                            Status = true,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            AgenciesId = 0,
                            Cod = 1,
                            Deleted = false,
                            Name = "Accountant",
                            NamePersian = "حسابدار",
                            SaveDate = "1402/10/22 - 07:29:50",
                            Status = true,
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            AgenciesId = 0,
                            Cod = 1,
                            Deleted = false,
                            Name = "Viewer",
                            NamePersian = "بیننده",
                            SaveDate = "1402/10/22 - 07:29:50",
                            Status = true,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Domin.UsersDomin.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgenciesId")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ProfilePhoto")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("SaveDate")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("SecurityCod")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Mobile")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("Tbl_Users", (string)null);
                });

            modelBuilder.Entity("Domin.ExpenseDomin.Expense", b =>
                {
                    b.HasOne("Domin.ExpenseDomin.Collection", "Collection")
                        .WithMany("Expenses")
                        .HasForeignKey("Collection_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collection");
                });

            modelBuilder.Entity("Domin.UsersDomin.User", b =>
                {
                    b.HasOne("Domin.UsersDomin.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("Domin.UsersDomin.Permission", "Permissions", b1 =>
                        {
                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<long>("Id"));

                            b1.Property<int>("Code")
                                .HasColumnType("int");

                            b1.Property<int>("UserId")
                                .HasColumnType("int");

                            b1.HasKey("Id");

                            b1.HasIndex("UserId");

                            b1.ToTable("Tbl_Permissions", (string)null);

                            b1.WithOwner("User")
                                .HasForeignKey("UserId");

                            b1.Navigation("User");
                        });

                    b.Navigation("Permissions");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Domin.ExpenseDomin.Collection", b =>
                {
                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("Domin.UsersDomin.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
